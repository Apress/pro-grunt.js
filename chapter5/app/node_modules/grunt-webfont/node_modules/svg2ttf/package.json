{
  "name": "svg2ttf",
  "version": "1.1.2",
  "description": "Convert SVG graphics to TTF font",
  "keywords": [
    "font",
    "ttf",
    "svg",
    "convertor"
  ],
  "homepage": "https://github.com/fontello/svg2ttf",
  "author": {
    "name": "Sergey Batishchev",
    "email": "sergej.batishchev@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/fontello/svg2ttf/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/fontello/svg2ttf/raw/master/LICENSE"
    }
  ],
  "dependencies": {
    "argparse": "~ 0.1.15",
    "lodash": "~ 2.1.0",
    "svgpath": "~ 1.0.0",
    "xmldom": "~ 0.1.16"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/fontello/svg2ttf.git"
  },
  "main": "./index.js",
  "bin": {
    "svg2ttf": "./svg2ttf.js"
  },
  "readme": "svg2ttf\n========\n\nsvg2ttf converts SVG graphics to TTF format. It was written for\n[Fontello](http://fontello.com), but you can find it useful for your projects.\n\n__For developpers:__\n\nInternal API is similar to FontForge's one. Since primary goal\nis generating iconic fonts, sources can lack some spesific TTF/OTF features,\nlike kerning and so on. Anyway, current code is a good base for development,\nbecause it will save you tons of hours to implement correct writing & optimizing\nTTF tables.\n\nAlso, library code can be browserified without problems. Use [webmake](https://github.com/medikoo/modules-webmake/)\nor something similar.\n\n\nUsing from CLI\n----------------\n\nInstall:\n\n``` bash\nnpm install -g svg2ttf\n```\n\nUsage example:\n\n``` bash\nsvg2ttf fontello.svg fontello.ttf\n```\n\nAPI\n---\n\n### svg2ttf(svgFontString, options) -> buf\n\n- `svgFontString` - SVG font content\n- `options` - not used yet\n- `buf` - internal [ByteBuffer](https://github.com/fontello/svg2ttf/blob/master/lib/byte_buffer.js)\n   object, similar to DataView. It's `buffer` property is  `Uin8Array` or `Array` with ttf content\n\nExample:\n\n``` javascript\nvar fs = require('fs');\nvar svg2ttf = require('svg2ttf');\n\nvar ttf = svg2ttf(fs.readFileSync('myfont.svg'), {});\nfs.writeFileSync('myfont.ttf', new Buffer(ttf.buffer));\n```\n\nAuthors\n-------\n\n* Sergey Batishchev - [@snb2013](https://github.com/snb2013)\n* Vitaly Puzrin - [@puzrin](https://github.com/puzrin)\n\n\nLicense\n-------\n\nCopyright (c) 2013 [Vitaly Puzrin](https://github.com/puzrin).\nReleased under the MIT license. See\n[LICENSE](https://github.com/nodeca/svg2ttf/blob/master/LICENSE) for details.\n\n",
  "readmeFilename": "README.md",
  "_id": "svg2ttf@1.1.2",
  "dist": {
    "shasum": "7efd91ea0d2662029711b9a4337b3fbcfcfa5fdc",
    "tarball": "http://registry.npmjs.org/svg2ttf/-/svg2ttf-1.1.2.tgz"
  },
  "_from": "svg2ttf@~1.1.2",
  "_resolved": "https://registry.npmjs.org/svg2ttf/-/svg2ttf-1.1.2.tgz",
  "scripts": {},
  "_npmVersion": "1.3.14",
  "_npmUser": {
    "name": "vitaly",
    "email": "vitaly@rcdesign.ru"
  },
  "maintainers": [
    {
      "name": "vitaly",
      "email": "vitaly@rcdesign.ru"
    }
  ],
  "directories": {},
  "_shasum": "7efd91ea0d2662029711b9a4337b3fbcfcfa5fdc"
}
